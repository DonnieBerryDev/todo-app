{"version":3,"sources":["components/Todos.js","components/Todoapp.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","props","todos","map","todo","index","class","style","color","isCompleted","text","className","onClick","handleCompleted","handleDelete","TodoApp","useState","setTodos","input","setInput","id","onSubmit","e","preventDefault","console","log","type","onChange","target","value","placeholder","newTodos","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAqCeA,EAnCD,SAACC,GACb,OACE,6BACGA,EAAMC,MAAMC,KAAI,SAACC,EAAMC,GACtB,OACE,qBAAKC,MAAM,OAAX,SACE,+BACE,qBAAKA,MAAM,aAAX,SACE,mBAAGC,MAAO,CAAEC,MAAOJ,EAAKK,YAAc,QAAU,IAAhD,SACGL,EAAKM,SAGV,sBAAKJ,MAAM,eAAX,UACE,wBACEK,UAAU,eACVC,QAAS,kBAAMX,EAAMY,gBAAgB,CAAER,WAFzC,SAIGD,EAAKK,YAAc,aAAe,aAGrC,wBACEE,UAAU,aACVC,QAAS,kBAAMX,EAAMa,aAAa,CAAET,WAFtC,yBAdKA,WCoDNU,EAzDC,WAAO,IAAD,EACMC,mBAAS,IADf,mBACbd,EADa,KACNe,EADM,OAEMD,mBAAS,IAFf,mBAEbE,EAFa,KAENC,EAFM,KA+BpB,OACE,qBAAKC,GAAG,WAAR,SACE,qBAAKd,MAAM,YAAX,SACE,qBAAKA,MAAM,YAAX,SACE,sBAAKA,MAAM,aAAX,UACE,sBAAMe,SA7BK,SAACC,GACpBA,EAAEC,iBACFC,QAAQC,IAAIP,GACZC,EAAS,IAKTF,EAAS,CAJO,CACdP,KAAMQ,EACNT,aAAa,IAEP,mBAAcP,MAqBd,SACE,uBACEwB,KAAK,OACLN,GAAG,aACHO,SApCa,SAACL,GAC1BH,EAASG,EAAEM,OAAOC,QAoCNA,MAAOX,EACPY,YAAY,sBAGhB,cAAC,EAAD,CACE5B,MAAOA,EACPY,aAtBS,SAAC,GAAe,IAAbT,EAAY,EAAZA,MAChB0B,EAAQ,YAAO7B,GACrB6B,EAASC,OAAO3B,EAAO,GACvBY,EAASc,IAoBClB,gBA9BY,SAAC,GAAe,IAAbR,EAAY,EAAZA,MACnB0B,EAAQ,YAAO7B,GAErB6B,EAAS1B,GAAOI,aAAcsB,EAAS1B,GAAOI,YAC9CQ,EAASc,gBCdEE,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e89be5d.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nconst Todos = (props) => {\r\n  return (\r\n    <ul>\r\n      {props.todos.map((todo, index) => {\r\n        return (\r\n          <div class=\"todo\">\r\n            <li key={index}>\r\n              <div class=\"todo_todos\">\r\n                <a style={{ color: todo.isCompleted ? \"green\" : \"\" }}>\r\n                  {todo.text}\r\n                </a>\r\n              </div>\r\n              <div class=\"todo_buttons\">\r\n                <button\r\n                  className=\"btn_complete\"\r\n                  onClick={() => props.handleCompleted({ index })}\r\n                >\r\n                  {todo.isCompleted ? \"Uncomplete\" : \"Complete\"}\r\n                </button>\r\n\r\n                <button\r\n                  className=\"btn_delete\"\r\n                  onClick={() => props.handleDelete({ index })}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </li>\r\n          </div>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Todos\r\n","import React, { useState } from \"react\"\r\nimport Todos from \"./Todos\"\r\n\r\nconst TodoApp = () => {\r\n  const [todos, setTodos] = useState([])\r\n  const [input, setInput] = useState(\"\")\r\n\r\n  const handleCurrentInput = (e) => {\r\n    setInput(e.target.value)\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(input)\r\n    setInput(\"\")\r\n    const newTodo = {\r\n      text: input,\r\n      isCompleted: false,\r\n    }\r\n    setTodos([newTodo, ...todos])\r\n  }\r\n\r\n  const handleCompleted = ({ index }) => {\r\n    const newTodos = [...todos]\r\n\r\n    newTodos[index].isCompleted = newTodos[index].isCompleted ? false : true\r\n    setTodos(newTodos)\r\n  }\r\n\r\n  const handleDelete = ({ index }) => {\r\n    const newTodos = [...todos]\r\n    newTodos.splice(index, 1)\r\n    setTodos(newTodos)\r\n  }\r\n\r\n  return (\r\n    <div id=\"todoForm\">\r\n      <div class=\"container\">\r\n        <div class=\"todo_form\">\r\n          <div class=\"todo_input\">\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                id=\"input_todo\"\r\n                onChange={handleCurrentInput}\r\n                value={input}\r\n                placeholder=\"Enter a todo...\"\r\n              />\r\n            </form>\r\n            <Todos\r\n              todos={todos}\r\n              handleDelete={handleDelete}\r\n              handleCompleted={handleCompleted}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoApp\r\n","import \"./App.scss\"\nimport TodoApp from \"./components/Todoapp.js\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}